#define X64_ASM_CONDITIONAL(jcc_name, cmov_name, setcc_name) \
  X64_ASM_INSTRUCTION_1(jcc_name)                            \
  X64_ASM_INSTRUCTION_2(cmov_name)                           \
  X64_ASM_INSTRUCTION_1(setcc_name)

X64_ASM_INSTRUCTION_2(add)
X64_ASM_INSTRUCTION_2(sub)
X64_ASM_INSTRUCTION_2(xor_)
X64_ASM_INSTRUCTION_2(and_)
X64_ASM_INSTRUCTION_2(or_)
X64_ASM_INSTRUCTION_2(cmp)

X64_ASM_INSTRUCTION_2(shl)
X64_ASM_INSTRUCTION_2(shr)
X64_ASM_INSTRUCTION_2(sar)
X64_ASM_INSTRUCTION_2(rol)
X64_ASM_INSTRUCTION_2(ror)

X64_ASM_CONDITIONAL(ja, cmova, seta)
X64_ASM_CONDITIONAL(jae, cmovae, setae)
X64_ASM_CONDITIONAL(jb, cmovb, setb)
X64_ASM_CONDITIONAL(jbe, cmovbe, setbe)
X64_ASM_CONDITIONAL(jc, cmovc, setc)
X64_ASM_CONDITIONAL(je, cmove, sete)
X64_ASM_CONDITIONAL(jz, cmovz, setz)
X64_ASM_CONDITIONAL(jg, cmovg, setg)
X64_ASM_CONDITIONAL(jge, cmovge, setge)
X64_ASM_CONDITIONAL(jl, cmovl, setl)
X64_ASM_CONDITIONAL(jle, cmovle, setle)
X64_ASM_CONDITIONAL(jna, cmovna, setna)
X64_ASM_CONDITIONAL(jnae, cmovnae, setnae)
X64_ASM_CONDITIONAL(jnb, cmovnb, setnb)
X64_ASM_CONDITIONAL(jnbe, cmovnbe, setnbe)
X64_ASM_CONDITIONAL(jnc, cmovnc, setnc)
X64_ASM_CONDITIONAL(jne, cmovne, setne)
X64_ASM_CONDITIONAL(jng, cmovng, setng)
X64_ASM_CONDITIONAL(jnge, cmovnge, setnge)
X64_ASM_CONDITIONAL(jnl, cmovnl, setnl)
X64_ASM_CONDITIONAL(jnle, cmovnle, setnle)
X64_ASM_CONDITIONAL(jno, cmovno, setno)
X64_ASM_CONDITIONAL(jnp, cmovnp, setnp)
X64_ASM_CONDITIONAL(jns, cmovns, setns)
X64_ASM_CONDITIONAL(jnz, cmovnz, setnz)
X64_ASM_CONDITIONAL(jo, cmovo, seto)
X64_ASM_CONDITIONAL(jp, cmovp, setp)
X64_ASM_CONDITIONAL(jpe, cmovpe, setpe)
X64_ASM_CONDITIONAL(jpo, cmovpo, setpo)
X64_ASM_CONDITIONAL(js, cmovs, sets)

X64_ASM_INSTRUCTION_2(bt)
X64_ASM_INSTRUCTION_2(btc)
X64_ASM_INSTRUCTION_2(btr)
X64_ASM_INSTRUCTION_2(bts)

X64_ASM_INSTRUCTION_1(inc)
X64_ASM_INSTRUCTION_1(dec)
X64_ASM_INSTRUCTION_1(not_)
X64_ASM_INSTRUCTION_1(neg)
X64_ASM_INSTRUCTION_1(mul)
X64_ASM_INSTRUCTION_1(imul)
X64_ASM_INSTRUCTION_2(imul)
X64_ASM_INSTRUCTION_1(div)
X64_ASM_INSTRUCTION_1(idiv)

X64_ASM_INSTRUCTION_0(cqo)
X64_ASM_INSTRUCTION_0(int3)
X64_ASM_INSTRUCTION_0(rdtsc)
X64_ASM_INSTRUCTION_0(nop)

X64_ASM_INSTRUCTION_2(movzxb)
X64_ASM_INSTRUCTION_2(movzxw)
X64_ASM_INSTRUCTION_2(movsxb)
X64_ASM_INSTRUCTION_2(movsxw)
X64_ASM_INSTRUCTION_2(movsxd)

X64_ASM_INSTRUCTION_2(mov)
X64_ASM_INSTRUCTION_2(test)

X64_ASM_INSTRUCTION_1(push)
X64_ASM_INSTRUCTION_1(pop)
X64_ASM_INSTRUCTION_1(jmp)
X64_ASM_INSTRUCTION_1(call)

X64_ASM_INSTRUCTION_0(ret)
X64_ASM_INSTRUCTION_1(ret)

X64_ASM_INSTRUCTION_2(lea)

#undef X64_ASM_CONDITIONAL
